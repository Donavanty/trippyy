{"version":3,"sources":["store/actions/actions.js","store/actions/actionTypes.js","Components/navBar.jsx","Components/StartComponents/calendar.jsx","Components/StartComponents/inputForm.jsx","Containers/StartPage.jsx","Containers/Login.jsx","Containers/Signup.jsx","Containers/MyTrips.jsx","routes.js","store/utility.js","store/reducers/reducer.js","index.js"],"names":["authSuccessed","token","username","userId","type","authFailed","error","alert","logouted","localStorage","removeItem","checkAuthTimeouted","expirationTime","dispatch","setTimeout","authLogined","password","axios","post","then","res","data","id","expirationDate","Date","getTime","setItem","catch","err","authCheckedState","getItem","undefined","NavBar","className","to","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","this","props","isAuthenticated","Fragment","onClick","logout","pathname","state","from","Component","connect","onTryAutoSignup","actions","Calendar","startDate","endDate","focusedInput","startDateId","endDateId","onDatesChange","setState","updateDates","format","onFocusChange","InputForm","newTrip","event","preventDefault","target","country","value","history","push","onSubmit","name","placeholder","destination","tripName","headers","Authorization","console","log","StartPage","location","Login","handleSubmit","onAuth","prevProps","prevState","snapshot","loading","Signup","email","password1","password2","MyTrips","tripIDs","trips","local_loading","get","length","map","index","key","BaseRoute","exact","path","component","updateObject","oldObject","updatedProperties","initialState","authStart","action","authSuccess","authFail","authLogout","reducer","composeEnhances","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.787c2b5a.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authStarted = () => {\n\treturn {\n\t\ttype: actionTypes.AUTH_START\n\t}\n}\n\nexport const authSuccessed = (token, username, userId) => {\n\treturn {\n\t\ttoken: token,\n\t\ttype: actionTypes.AUTH_SUCCESS,\n\t\tusername: username,\n\t\tuserId: userId\n\t}\n}\n\nexport const authFailed = (error) => {\n\talert(error);\n\treturn {\n\t\terror: error,\n\t\ttype: actionTypes.AUTH_FAIL\n\t}\n}\n\nexport const logouted = () => {\n\tlocalStorage.removeItem('username');\n\tlocalStorage.removeItem('user');\n\tlocalStorage.removeItem('expirationDate');\n\tlocalStorage.removeItem('token');\n\tlocalStorage.removeItem('userId');\n\treturn {\n\t\ttype: actionTypes.AUTH_LOGOUT\n\t}\n}\n\nexport const checkAuthTimeouted = expirationTime => {\n\treturn dispatch => {\n\t\tsetTimeout( () => {\n\t\t\tdispatch(logouted());\n\t\t}, expirationTime * 1000)\n\t}\n}\nexport const authLogined = (username, password) => {\n\treturn dispatch => {\n\t\tdispatch(authStarted());\n\t\taxios.post('http://127.0.0.1:8000/api/authenticate/', {\n\t\t\tusername: username,\n\t\t\tpassword: password\n\t\t}).then(res => {\n\t\t\tconst token = res.data.token;\n\t\t\tconst userId = res.data.id;\n\t\t\tconst expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n\t\t\tlocalStorage.setItem('token', token);\n\t\t\tlocalStorage.setItem('expirationDate', expirationDate);\n\t\t\tlocalStorage.setItem('username', username);\n\t\t\tlocalStorage.setItem('userId', userId);\n\t\t\tdispatch(authSuccessed(token, username, userId));\n\t\t\tdispatch(checkAuthTimeouted(3600));\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch(authFailed(err))\n\t\t})\n\t}\n}\n\nexport const authSignuped = (username, email, password1, password2) => {\n\treturn dispatch => {\n\t\tdispatch(authStarted());\n\t\taxios.post('http://127.0.0.1:8000/rest-auth/registration/', {\n\t\t\tusername: username,\n\t\t\temail: email,\n\t\t\tpassword1: password1,\n\t\t\tpassword2: password2\n\t\t}).then(res => {\n\t\t\tdispatch(authLogined(username, password1));\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch(authFailed(err))\n\t\t})\n\t}\n}\n\nexport const authCheckedState = () => {\n\treturn dispatch => {\n\t\tconst token = localStorage.getItem('token');\n\t\tconst username = localStorage.getItem('username');\n\t\tif (token === undefined) {\n\t\t\tdispatch(logouted());\n\t\t} else {\n\t\t\tconst expirationDate = new Date(localStorage.getItem('expirationDate'));\n\t\t\tif (expirationDate <= new Date() ) {\n\t\t\t\tdispatch(logouted());\n\t\t\t} else {\n\t\t\t\tdispatch(authSuccessed(token, username));\n\t\t\t\tdispatch(checkAuthTimeouted( (expirationDate.getTime() - new Date().getTime()) / 1000 ));\n\t\t\t}\n\n\t\t}\n\t}\t\n}\n\n// ---------------------------------------------------------------------------------\n\nexport const newTrip = (country, startDate, endDate) => {\n\tconst data = {\n\t\t\t\tdestination: country,\n\t\t\t\ttripName: \"Trip to \" + country + \" from \" + startDate + \" to \" + endDate,\n\t\t\t\tstartDate: startDate,\n\t\t\t\tendDate: endDate\n\t\t\t}\n\taxios.post('http://127.0.0.1:8000/api/trips/', data, {\n\t\t\theaders: {Authorization: \"Token \" + localStorage.token},\n\t\t}).then(res => console.log(res));\n\tlocalStorage.setItem('country', country);\n\tlocalStorage.setItem('startDate', startDate);\n\tlocalStorage.setItem('endDate', endDate);\n\treturn {\n\t\ttype: actionTypes.NEW_TRIP,\n\t\tcountry: country,\n\t\tstartDate: startDate,\n\t\tendDate: endDate\n\t}\n\n}","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const NEW_TRIP = 'NEW_TRIP'","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./CSS/navBar.css\";\n\n//Imports needed for Redux\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/actions';\n\nclass NavBar extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<nav className=\"navbar fixed-top navbar-expand-lg\" id =\"nav1\">\n\t\t\t<Link to=\"/\" className=\"navbar-brand\" href=\"#\">trippyy</Link>\n\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t</button>\n\n\t\t\t<div className=\"collapse navbar-collapse col-11\" id=\"navbar-nav\" >\n\t\t\t<ul className=\"navbar-nav justify-content-center\">\n\n\t\t\t<li className=\"nav-item\">\n\t\t\t<Link to=\"/\" className =\"nav-link\"> Home </Link>\n\t\t\t</li>\n\n\t\t\t<li className=\"nav-item\">\n\t\t\t<Link to=\"/mytrips\" className =\"nav-link\"> My Trips<span className=\"sr-only\">(current)</span></Link>\n\t\t\t</li>\n\n\t\t\t{\n\t\t\t\tthis.props.isAuthenticated ? \n\t\t\t\t<React.Fragment>\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t<Link to= \"/\" className =\"nav-link\" onClick = {this.props.logout}>\n\t\t\t\tLogout\n\t\t\t\t</Link>\n\t\t\t\t</li>\n\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t<Link to=\"/mytrips\" className=\"nav-link\"> Account: {this.props.username} </Link>\n\t\t\t\t</li>\n\t\t\t\t</React.Fragment>\n\t\t\t\t:\n\n\t\t\t\t<React.Fragment>\n\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t<Link to={{\n\t\t\t\t\tpathname: \"/login\",\n\t\t\t\t\tstate: { from: this.props.from }\n\t\t\t\t}} className=\"nav-link\"> Login </Link>\n\t\t\t\t</li>\n\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t<Link to=\"/signup\" className=\"nav-link\"> Signup </Link>\n\t\t\t\t</li>\n\n\t\t\t\t</React.Fragment>\n\n\t\t\t}\n\t\t\t</ul>\n\t\t\t</div>\n\t\t\t</nav>);\n\n\t}\n\n}\n\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\t// Basic stats needed for NAV ------------\n\t\tisAuthenticated: state.token !== null,\n\t\tusername: state.username\n\t\t// Basic stats needed for NAV ------------\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\t// Basic stats needed for NAV ------------\n\t\tonTryAutoSignup: () => dispatch(actions.authCheckedState()),\n\t\tlogout: () => dispatch(actions.logouted())\n\t\t// Basic stats needed for NAV ------------\n\t}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);","import React, { Component } from 'react';\n\n\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\nimport { DateRangePicker } from 'react-dates';\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startDate: null,\n      endDate: null,\n      focusedInput: null,\n    };\n  }\n\n  render() {\n    return (\n        <DateRangePicker\n          startDateId=\"startDate\"\n          endDateId=\"endDate\"\n          startDate={this.state.startDate}\n          endDate={this.state.endDate}\n          onDatesChange={({ startDate, endDate }) => \n            { \n              this.setState({ startDate, endDate });\n              if (endDate !== null && startDate !== null) {\n                this.props.updateDates(startDate.format(\"YYYY-MM-DD\"), endDate.format(\"YYYY-MM-DD\"));\n              }\n            }\n          }\n          focusedInput={this.state.focusedInput}\n          onFocusChange={(focusedInput) => { this.setState({ focusedInput })}}\n        />\n    );\n  }\n}\n\nexport default Calendar;","import React, {Component} from 'react';\nimport \"./inputForm.css\"\nimport axios from \"axios\";\nimport Calendar from \"./calendar\"\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/actions';\nimport { Link } from 'react-router-dom';\n\nclass InputForm extends Component {\n\n\tstate = {\n\t\tstartDate: null,\n\t\tendDate: null\n\t}\n\n\tupdateDates = (startDate, endDate) => {\n\t\tthis.setState({startDate, endDate});\n\t}\n\n\tnewTrip = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.props.newTrip(event.target.country.value, this.state.startDate, this.state.endDate);\n\t\tthis.props.history.push(\"/mytrips\")\n\t}\n\n\trender() {\n\t\treturn (\n\t      <div className = \"container-fluid align-items-center inputForm\">\n\t      \t{\n\t    \t\t (this.props.isAuthenticated) ?\n\t    \t\t\t <h1>Hello, {this.props.username}</h1> : (<h1></h1>)\n\t    \t}\n\t          <div className = \"jumbotron\">\n\t              <form onSubmit = {this.newTrip}> \n\t                <div>\n\t                \t<h3> Enter Country: </h3>\n\t                \t<input type = \"text\" name = \"country\" placeholder = \"Enter country pls\" />\n\t                </div>\n\n\t                <div className =\"inputForm\">\n\t                \t<h3> Enter dates: </h3>\n\t                \t<Calendar updateDates={this.updateDates}/>\n\t                </div>\n\t                <div className = \"inputForm\">\n\t                \t<button> Submit </button>\n\t                </div>\n\t              </form>\n\n\t              \n\t          </div>\n\t      </div>);\n\n\t}\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.token !== null,\n        username: state.username,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        newTrip: (country, startDate, endDate) => dispatch(actions.newTrip(country, startDate, endDate)) \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputForm);","import React, {Component} from 'react';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport NavBar from '../Components/navBar';\nimport InputForm from '../Components/StartComponents/inputForm'\nimport Calendar from '../Components/StartComponents/calendar'\nimport \"./CSS/global.css\"\nimport axios from \"axios\";\n\nimport {connect} from 'react-redux';\nimport * as actions from '../store/actions/actions'\n\n\nclass StartPage extends Component {\n\n\tcomponentDidMount() {\n\t\t//Updates login status into redux.\n\t\tthis.props.onTryAutoSignup();\n\t}\n\n\trender() {\n\t  return (\n\t    <div >\n\t    \t<NavBar from={this.props.location.pathname}/>\n\t    \t<InputForm history={this.props.history} />\n\t    \t\n\t    </div>\n\t  );\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisAuthenticated: state.token !== null,\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonTryAutoSignup: () => dispatch(actions.authCheckedState()),\n\t}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(StartPage);\n","import React, {Component} from 'react';\nimport axios from \"axios\";\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/actions';\nimport NavBar from '../Components/navBar';\nimport \"./CSS/global.css\"\n\nclass Login extends Component {\n\n    componentDidMount() {\n      //Updates login status into redux.\n      this.props.onTryAutoSignup();\n\n      //Checks if logged in, redirect to mainpage.\n      if (localStorage.token !== null && localStorage.token !== undefined) {\n        this.props.history.push('/');\n      }\n    }\n\n    //Happens upon receiving updated login information.\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //Checks where the page came from, if legit page, then redirect to where they came from.\n        if (this.props.isAuthenticated) {\n          if (this.props.location.state === undefined || this.props.location.state === null) {\n            this.props.history.push('/');\n          } else {\n            const from = this.props.location.state.from;\n            this.props.history.push(from);\n            this.setState({from: null});\n          }\n        }\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.onAuth(event.target.username.value, event.target.password.value);\n      }\n\n    render() {\n        return (\n          <div className = \"container-fluid align-items-center\">\n              <NavBar from={this.props.location.pathname}/>\n              <div className = \"jumbotron startBox\">\n                <h1> Login</h1> \n                  <form onSubmit={this.handleSubmit}>\n                    <div className = \"element\">\n                      <input type = \"text\" name = \"username\" placeholder = \"Enter Username\" />\n                    </div>\n                    \n                    <div className = \"element\">\n                      <input type = \"text\" name = \"password\" placeholder = \"Enter Password\" />\n                    </div>\n                    \n                    <button className = \"element\" type=\"submit\" value = \"Submit\"> Submit </button>\n                  </form>\n              </div>\n          </div>);\n\n    }\n\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n      isAuthenticated: state.token !== null,\n\n      loading: state.loading,\n      error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onTryAutoSignup: () => dispatch(actions.authCheckedState()),\n        onAuth: (username, password) => dispatch(actions.authLogined(username, password)) \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, {Component} from 'react';\nimport axios from \"axios\";\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/actions';\nimport NavBar from '../Components/navBar';\n\nclass Signup extends Component {\n\n    componentDidMount() {\n      //Updates login status into redux.\n      this.props.onTryAutoSignup();\n\n      //If user is logged in, redirect to main page.\n      if (localStorage.token !== null && localStorage.token !== undefined) {\n        alert(\"Please logout to create a new account\");\n        this.props.history.push('/');\n      }\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.onAuth(event.target.username.value, event.target.email.value,\n          event.target.password1.value, event.target.password2.value);\n        this.props.history.push('/');\n      }\n\n    render() {\n        return (\n          <div className = \"container-fluid align-items-center\">\n              <NavBar from={this.props.location.pathname}/>\n              \n              <div className = \"jumbotron startBox\">\n                <h1> SIGN UP</h1>\n                  <form onSubmit={this.handleSubmit}>\n                    <div className = \"element\">\n                      <input type = \"text\" name = \"username\" placeholder = \"Enter Username\" />\n                    </div>\n                    \n                    <div className = \"element\">\n                      <input type = \"text\" name = \"email\" placeholder = \"Enter Email\" />\n                    </div>\n\n                    <div className = \"element\">\n                      <input type = \"text\" name = \"password1\" placeholder = \"Enter Password\" />\n                    </div>\n\n                    <div className = \"element\">\n                      <input type = \"text\" name = \"password2\" placeholder = \"Enter Password again\" />\n                    </div>\n                    \n                    <button className =\"element\" type=\"submit\" value = \"Submit\"> Signup </button>\n                  </form>\n              </div>\n          </div>);\n\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignuped(username, email, password1, password2)),\n        onTryAutoSignup: () => dispatch(actions.authCheckedState()),\n        \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import React, {Component} from 'react';\nimport axios from \"axios\";\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/actions';\nimport NavBar from '../Components/navBar'\n\n\nclass MyTrips extends Component {\n\tstate = {\n\t\ttripIDs: [],\n\t\ttrips: [],\n\t\tlocal_loading: null\n\t}\n\tcomponentDidMount() {\n\n\t\tthis.setState({local_loading: true});\n\n\t\t//Updates login status to redux.\n\t\tthis.props.onTryAutoSignup();\n\n\t\t//If user is not logged in, redirect to Login page\n\t\tif (localStorage.getItem('token') == null || localStorage.getItem('token') == undefined) {\n\t\t\tthis.props.history.push({\n\t\t\t\t\tpathname: \"/login\",\n\t\t\t\t\tstate: { from: this.props.location.pathname }\n\t\t\t\t});\n\t\t}\n\n\t\t// Loads trips from backend assuming logged in, catch doesnt handle!\n\t\t// Need to add checks \n\t\ttry {\n\t\t\taxios.get(\"http://127.0.0.1:8000/api/users/\"+localStorage.userId, {\n\t\t\t\theaders: {Authorization: \"Token \" + localStorage.token}\n\t\t\t}).then(res => {\n\t\t\t\tthis.setState({tripIDs: res.data.trips});\n\t\t\t}).then(res => {\n\t\t\t\tfor (let id of this.state.tripIDs) {\n\t\t\t\t\taxios.get(\"http://127.0.0.1:8000/api/trips/\" + id, \n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {Authorization: \"Token \" + localStorage.token}\n\t\t\t\t\t}).then( res => {\n\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t{trips: [...this.state.trips, res.data]}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t});\t\n\t\t\t\t}\n\t\t\t\tthis.setState({local_loading: false});\n\t\t\t});\n\t\t} catch (error) {\n\t\t\talert(error);\n\t\t\tthis.props.history.push(\"/\");\n\t\t}\n\t}\n\nrender() {\n\tif (this.state.local_loading) { return null };\n\treturn (\n\t\t<React.Fragment>\n\t\t<NavBar from={this.props.location.pathname}/>\n\t\t<div className = \"jumbotron startBox\">\n\t\t<h1> My Trips </h1>\n\t\t{\n\t\t\t(this.state.trips.length > 0) ? \n\t\t\t<ul>\n\n\t\t\t{this.state.trips.map((value,index) => <li key={index}> {value.tripName} </li>)}\n\n\t\t\t</ul>\n\n\t\t\t: \n\n\t\t\t<p> No trips available </p>\n\t\t}\n\t\t</div>\n\n\t\t</React.Fragment> \n\t\t);\n}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisAuthenticated: state.token !== null,\n\t\tusername: state.username\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonTryAutoSignup: () => dispatch(actions.authCheckedState()),\n\t}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(MyTrips);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport StartPage from './Containers/StartPage';\nimport Login from './Containers/Login';\nimport Signup from './Containers/Signup';\nimport MyTrips from './Containers/MyTrips';\n\nconst BaseRoute = () => (\n\t<Switch> \n\t\t<Route exact path='/' component = {StartPage} />\n\t\t<Route exact path ='/login/' component = {Login} />\n\t\t<Route exact path ='/signup/' component = {Signup} />\n\t\t<Route exact path ='/mytrips' component = {MyTrips} />\n\t</Switch> );\n\nexport default BaseRoute;\n\t\t\n","export const updateObject = (oldObject, updatedProperties) => {\n\treturn {\n\t\t...oldObject,\n\t\t...updatedProperties\n\t}\n}\n\n//Takes in oldObject, replaces the properties","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {\n\ttoken: null,\n\terror: null,\n\tloading: false,\n\tusername: null,\n\tuserId: null,\n\n\tcountry: \"Alaska\",\n\tstartDate: null,\n\tendDate: null,\n}\n\nconst authStart = (state, action) => {\n\tconsole.log(\"staaaart\");\n\treturn updateObject(state, {\n\t\terror: null,\n\t\tloading: true\n\t});\n}\n\nconst authSuccess = (state, action) => {\n\treturn updateObject(state, {\n\t\ttoken: action.token,\n\t\terror: null,\n\t\tloading: false,\n\t\tusername: action.username,\n\t\tuserId: action.userId,\n\t});\n}\n\nconst authFail = (state, action) => {\n\treturn updateObject(state, {\n\t\terror: action.error,\n\t\tloading: false\n\t});\n}\n\nconst authLogout = (state, action) => {\n\treturn updateObject(state, {\n\t\ttoken: null,\n\t});\n}\n\nconst newTrip = (state, action) => {\n\treturn updateObject(state, {\n\t\tcountry: action.country,\n\t\tstartDate: action.startDate,\n\t\tendDate: action.endDate\n\t})\n}\n\nconst reducer = (state=initialState, action) => {\n\tswitch(action.type) {\n\n\t\tcase actionTypes.NEW_TRIP: return newTrip(state, action);\n\n\t\tcase actionTypes.AUTH_START: return authStart(state, action);\n\t\tcase actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n\t\tcase actionTypes.AUTH_FAIL: return authFail(state, action);\n\t\tcase actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport BaseRouter from './routes';\nimport { BrowserRouter as Router} from 'react-router-dom';\n// import * as serviceWorker from './serviceWorker';\n\nimport reducer from './store/reducers/reducer';\nimport { createStore , compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk' \n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducer, composeEnhances(\n\t\tapplyMiddleware(thunk)\n\t));\n\nconst app = (\n\t<Provider store={store}>\n\t\t<Router>\n\t  \t\t<BaseRouter />\n\t  \t</Router>\n\t</Provider>);\n\nReactDOM.render(\n  app, document.getElementById('root')\n);"],"sourceRoot":""}