{"ast":null,"code":"var _jsxFileName = \"/Users/lixupeng/NUS ACADS/ORBITAL/trippyy/frontend/[REACT] trippyy/src/Containers/MyTrips.jsx\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/actions';\nimport NavBar from '../Components/navBar';\n\nclass MyTrips extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tripIDs: [],\n      trips: [],\n      z: [1, 2, 3, 4, 5]\n    };\n  }\n\n  componentDidMount() {\n    this.props.onTryAutoSignup(); // Loads trips from backend\n\n    axios.get(\"http://127.0.0.1:8000/api/users/1\", {\n      headers: {\n        Authorization: \"Token \" + localStorage.token\n      }\n    }).then(res => {\n      this.setState({\n        tripIDs: res.data.trips\n      });\n    }).then(res => {\n      for (const id of this.state.tripIDs) {\n        console.log(id);\n        axios.get(\"http://127.0.0.1:8000/api/trips/\" + id, {\n          headers: {\n            Authorization: \"Token \" + localStorage.token\n          }\n        }).then(res => {\n          this.state.trips.push(res.data);\n        });\n      }\n    });\n    console.log(\"eg\", this.state.z[0]);\n    console.log(\"kek\", this.state.trips[0]);\n  }\n\n  render() {\n    console.log(\"trips\", this.state.trips);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 4\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron startBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, \" My Trips \"), this.props.isAuthenticated ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, \" 1 \", this.props.username, \" \") : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }\n    }, \" FAILE \")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    // Basic stats needed for NAV ------------\n    isAuthenticated: state.token !== null,\n    username: state.username // Basic stats needed for NAV ------------\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // Basic stats needed for NAV ------------\n    onTryAutoSignup: () => dispatch(actions.authCheckedState()),\n    logout: () => dispatch(actions.logouted()) // Basic stats needed for NAV ------------\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyTrips);","map":{"version":3,"sources":["/Users/lixupeng/NUS ACADS/ORBITAL/trippyy/frontend/[REACT] trippyy/src/Containers/MyTrips.jsx"],"names":["React","Component","axios","connect","actions","NavBar","MyTrips","state","tripIDs","trips","z","componentDidMount","props","onTryAutoSignup","get","headers","Authorization","localStorage","token","then","res","setState","data","id","console","log","push","render","isAuthenticated","username","mapStateToProps","mapDispatchToProps","dispatch","authCheckedState","logout","logouted"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/actions';\nimport NavBar from '../Components/navBar'\n\n\nclass MyTrips extends Component {\n\tstate = {\n\t\ttripIDs: [],\n\t\ttrips: [],\n\t\tz: [1,2,3,4,5]\n\t}\n\tcomponentDidMount() {\n\t\tthis.props.onTryAutoSignup();\n\n\t\t// Loads trips from backend\n\t\taxios.get(\"http://127.0.0.1:8000/api/users/1\", {\n\t\t\theaders: {Authorization: \"Token \" + localStorage.token}\n\t\t}).then(res => {\n\t\t\tthis.setState({tripIDs: res.data.trips});\n\t\t\t}).then(res => {\n\t\t\t\tfor (const id of this.state.tripIDs) {\n\t\t\t\t\tconsole.log(id);\n\t\t\t\t\taxios.get(\"http://127.0.0.1:8000/api/trips/\" + id, {\n\t\t\t\t\t\theaders: {Authorization: \"Token \" + localStorage.token}\n\t\t\t\t\t}).then(res => { \n\t\t\t\t\t\tthis.state.trips.push(res.data);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\tconsole.log(\"eg\", this.state.z[0]);\n\t\tconsole.log(\"kek\" ,this.state.trips[0]);\n\n\t\t\n\n\t}\n\n\trender() {\n\t\tconsole.log(\"trips\", this.state.trips)\n\t\treturn (\n\t\t<React.Fragment>\n\t\t\t<NavBar {...this.props}/>\n\t\t\t<div className = \"jumbotron startBox\">\n\t\t\t\t<h1> My Trips </h1>\n\t\t\t\t{\n\t\t\t\t\t(this.props.isAuthenticated) ? \n\t\t\t\t\t\t<h1> 1 {this.props.username} </h1>\n\n\t\t\t\t\t: \n\t\t\t\t\t<h1> FAILE </h1>\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t</React.Fragment> \n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\t// Basic stats needed for NAV ------------\n\t\tisAuthenticated: state.token !== null,\n\t\tusername: state.username\n\t\t// Basic stats needed for NAV ------------\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\t// Basic stats needed for NAV ------------\n\t\tonTryAutoSignup: () => dispatch(actions.authCheckedState()),\n\t\tlogout: () => dispatch(actions.logouted())\n\t\t// Basic stats needed for NAV ------------\n\t}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(MyTrips);"]},"metadata":{},"sourceType":"module"}