{"ast":null,"code":"import*as actionTypes from'./actionTypes';import axios from'axios';export var authStarted=function authStarted(){return{type:actionTypes.AUTH_START};};export var authSuccessed=function authSuccessed(token,username,userId){return{token:token,type:actionTypes.AUTH_SUCCESS,username:username,userId:userId};};export var authFailed=function authFailed(error){alert(error);return{error:error,type:actionTypes.AUTH_FAIL};};export var logouted=function logouted(){localStorage.removeItem('username');localStorage.removeItem('user');localStorage.removeItem('expirationDate');localStorage.removeItem('token');localStorage.removeItem('userId');return{type:actionTypes.AUTH_LOGOUT};};export var checkAuthTimeouted=function checkAuthTimeouted(expirationTime){return function(dispatch){setTimeout(function(){dispatch(logouted());},expirationTime*1000);};};export var authLogined=function authLogined(username,password){return function(dispatch){dispatch(authStarted());axios.post('http://127.0.0.1:8000/api/authenticate/',{username:username,password:password}).then(function(res){var token=res.data.token;var userId=res.data.id;var expirationDate=new Date(new Date().getTime()+3600*1000);localStorage.setItem('token',token);localStorage.setItem('expirationDate',expirationDate);localStorage.setItem('username',username);localStorage.setItem('userId',userId);dispatch(authSuccessed(token,username,userId));dispatch(checkAuthTimeouted(3600));}).catch(function(err){dispatch(authFailed(err));});};};export var authSignuped=function authSignuped(username,email,password1,password2){return function(dispatch){dispatch(authStarted());axios.post('http://127.0.0.1:8000/rest-auth/registration/',{username:username,email:email,password1:password1,password2:password2}).then(function(res){dispatch(authLogined(username,password1));}).catch(function(err){dispatch(authFailed(err));});};};export var authCheckedState=function authCheckedState(){return function(dispatch){var token=localStorage.getItem('token');var username=localStorage.getItem('username');if(token===undefined){dispatch(logouted());}else{var expirationDate=new Date(localStorage.getItem('expirationDate'));if(expirationDate<=new Date()){dispatch(logouted());}else{dispatch(authSuccessed(token,username));dispatch(checkAuthTimeouted((expirationDate.getTime()-new Date().getTime())/1000));}}};};// ---------------------------------------------------------------------------------\nexport var newTrip=function newTrip(country,startDate,endDate){var data={destination:country,tripName:\"Trip to \"+country+\" from \"+startDate+\" to \"+endDate,startDate:startDate,endDate:endDate};axios.post('http://127.0.0.1:8000/api/trips/',data,{headers:{Authorization:\"Token \"+localStorage.token}}).then(function(res){return console.log(res);});localStorage.setItem('country',country);localStorage.setItem('startDate',startDate);localStorage.setItem('endDate',endDate);return{type:actionTypes.NEW_TRIP,country:country,startDate:startDate,endDate:endDate};};","map":{"version":3,"sources":["/Users/lixupeng/NUS ACADS/ORBITAL/test3/src/store/actions/actions.js"],"names":["actionTypes","axios","authStarted","type","AUTH_START","authSuccessed","token","username","userId","AUTH_SUCCESS","authFailed","error","alert","AUTH_FAIL","logouted","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeouted","expirationTime","dispatch","setTimeout","authLogined","password","post","then","res","data","id","expirationDate","Date","getTime","setItem","catch","err","authSignuped","email","password1","password2","authCheckedState","getItem","undefined","newTrip","country","startDate","endDate","destination","tripName","headers","Authorization","console","log","NEW_TRIP"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authStarted = () => {\n\treturn {\n\t\ttype: actionTypes.AUTH_START\n\t}\n}\n\nexport const authSuccessed = (token, username, userId) => {\n\treturn {\n\t\ttoken: token,\n\t\ttype: actionTypes.AUTH_SUCCESS,\n\t\tusername: username,\n\t\tuserId: userId\n\t}\n}\n\nexport const authFailed = (error) => {\n\talert(error);\n\treturn {\n\t\terror: error,\n\t\ttype: actionTypes.AUTH_FAIL\n\t}\n}\n\nexport const logouted = () => {\n\tlocalStorage.removeItem('username');\n\tlocalStorage.removeItem('user');\n\tlocalStorage.removeItem('expirationDate');\n\tlocalStorage.removeItem('token');\n\tlocalStorage.removeItem('userId');\n\treturn {\n\t\ttype: actionTypes.AUTH_LOGOUT\n\t}\n}\n\nexport const checkAuthTimeouted = expirationTime => {\n\treturn dispatch => {\n\t\tsetTimeout( () => {\n\t\t\tdispatch(logouted());\n\t\t}, expirationTime * 1000)\n\t}\n}\nexport const authLogined = (username, password) => {\n\treturn dispatch => {\n\t\tdispatch(authStarted());\n\t\taxios.post('http://127.0.0.1:8000/api/authenticate/', {\n\t\t\tusername: username,\n\t\t\tpassword: password\n\t\t}).then(res => {\n\t\t\tconst token = res.data.token;\n\t\t\tconst userId = res.data.id;\n\t\t\tconst expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n\t\t\tlocalStorage.setItem('token', token);\n\t\t\tlocalStorage.setItem('expirationDate', expirationDate);\n\t\t\tlocalStorage.setItem('username', username);\n\t\t\tlocalStorage.setItem('userId', userId);\n\t\t\tdispatch(authSuccessed(token, username, userId));\n\t\t\tdispatch(checkAuthTimeouted(3600));\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch(authFailed(err))\n\t\t})\n\t}\n}\n\nexport const authSignuped = (username, email, password1, password2) => {\n\treturn dispatch => {\n\t\tdispatch(authStarted());\n\t\taxios.post('http://127.0.0.1:8000/rest-auth/registration/', {\n\t\t\tusername: username,\n\t\t\temail: email,\n\t\t\tpassword1: password1,\n\t\t\tpassword2: password2\n\t\t}).then(res => {\n\t\t\tdispatch(authLogined(username, password1));\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch(authFailed(err))\n\t\t})\n\t}\n}\n\nexport const authCheckedState = () => {\n\treturn dispatch => {\n\t\tconst token = localStorage.getItem('token');\n\t\tconst username = localStorage.getItem('username');\n\t\tif (token === undefined) {\n\t\t\tdispatch(logouted());\n\t\t} else {\n\t\t\tconst expirationDate = new Date(localStorage.getItem('expirationDate'));\n\t\t\tif (expirationDate <= new Date() ) {\n\t\t\t\tdispatch(logouted());\n\t\t\t} else {\n\t\t\t\tdispatch(authSuccessed(token, username));\n\t\t\t\tdispatch(checkAuthTimeouted( (expirationDate.getTime() - new Date().getTime()) / 1000 ));\n\t\t\t}\n\n\t\t}\n\t}\t\n}\n\n// ---------------------------------------------------------------------------------\n\nexport const newTrip = (country, startDate, endDate) => {\n\tconst data = {\n\t\t\t\tdestination: country,\n\t\t\t\ttripName: \"Trip to \" + country + \" from \" + startDate + \" to \" + endDate,\n\t\t\t\tstartDate: startDate,\n\t\t\t\tendDate: endDate\n\t\t\t}\n\taxios.post('http://127.0.0.1:8000/api/trips/', data, {\n\t\t\theaders: {Authorization: \"Token \" + localStorage.token},\n\t\t}).then(res => console.log(res));\n\tlocalStorage.setItem('country', country);\n\tlocalStorage.setItem('startDate', startDate);\n\tlocalStorage.setItem('endDate', endDate);\n\treturn {\n\t\ttype: actionTypes.NEW_TRIP,\n\t\tcountry: country,\n\t\tstartDate: startDate,\n\t\tendDate: endDate\n\t}\n\n}"]},"metadata":{},"sourceType":"module"}