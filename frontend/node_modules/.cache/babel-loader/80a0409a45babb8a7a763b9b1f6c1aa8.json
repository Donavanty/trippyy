{"ast":null,"code":"var _jsxFileName = \"/Users/lixupeng/NUS ACADS/ORBITAL/trippyy-working/trippyy/frontend/src/Components/StartComponents/Autocomplete.jsx\";\nimport React, { Component } from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\n\nclass Autocomplete extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = address => {\n      this.setState({\n        address\n      });\n    };\n\n    this.handleSelect = address => {\n      geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => console.log('Success', latLng)).catch(error => console.error('Error', error));\n    };\n\n    this.searchOptions = {\n      types: \"cities\"\n    };\n    this.state = {\n      address: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(PlacesAutocomplete, {\n      value: this.state.address,\n      onChange: this.handleChange,\n      onSelect: this.handleSelect,\n      searchOptions: this.searchOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps({\n      placeholder: 'Search City',\n      className: 'location-search-input'\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, loading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, \"Loading...\"), suggestions.map(suggestion => {\n      const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n      const style = suggestion.active ? {\n        backgroundColor: '#fafafa',\n        cursor: 'pointer'\n      } : {\n        backgroundColor: '#ffffff',\n        cursor: 'pointer'\n      };\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n        className,\n        style\n      }), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 19\n        }\n      }, suggestion.description));\n    }))));\n  }\n\n}\n\nexport default Autocomplete;","map":{"version":3,"sources":["/Users/lixupeng/NUS ACADS/ORBITAL/trippyy-working/trippyy/frontend/src/Components/StartComponents/Autocomplete.jsx"],"names":["React","Component","PlacesAutocomplete","geocodeByAddress","getLatLng","Autocomplete","constructor","props","handleChange","address","setState","handleSelect","then","results","latLng","console","log","catch","error","searchOptions","types","state","render","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,kBAAP,IACEC,gBADF,EAEEC,SAFF,QAGO,2BAHP;;AAMA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AACnCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,YALmB,GAKJC,OAAO,IAAI;AACxB,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACD,KAPkB;;AAAA,SASnBE,YATmB,GASJF,OAAO,IAAI;AACxBN,MAAAA,gBAAgB,CAACM,OAAD,CAAhB,CACCG,IADD,CACMC,OAAO,IAAIT,SAAS,CAACS,OAAO,CAAC,CAAD,CAAR,CAD1B,EAECD,IAFD,CAEME,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB,CAFhB,EAGCG,KAHD,CAGOC,KAAK,IAAIH,OAAO,CAACG,KAAR,CAAc,OAAd,EAAuBA,KAAvB,CAHhB;AAID,KAdkB;;AAAA,SAgBnBC,aAhBmB,GAgBH;AACdC,MAAAA,KAAK,EAAE;AADO,KAhBG;AAEjB,SAAKC,KAAL,GAAa;AAAEZ,MAAAA,OAAO,EAAE;AAAX,KAAb;AACD;;AAiBDa,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,kBAAD;AACA,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWZ,OADlB;AAEA,MAAA,QAAQ,EAAE,KAAKD,YAFf;AAGA,MAAA,QAAQ,EAAE,KAAKG,YAHf;AAIA,MAAA,aAAa,EAAE,KAAKQ,aAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMC,CAAC;AAAEI,MAAAA,aAAF;AAAiBC,MAAAA,WAAjB;AAA8BC,MAAAA,sBAA9B;AAAsDC,MAAAA;AAAtD,KAAD,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,+CACIH,aAAa,CAAC;AAChBI,MAAAA,WAAW,EAAE,aADG;AAEhBC,MAAAA,SAAS,EAAE;AAFK,KAAD,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADA,eAOA;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCF,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADZ,EAECF,WAAW,CAACK,GAAZ,CAAgBC,UAAU,IAAI;AAC7B,YAAMF,SAAS,GAAGE,UAAU,CAACC,MAAX,GAChB,yBADgB,GAEhB,iBAFF,CAD6B,CAIvB;;AACA,YAAMC,KAAK,GAAGF,UAAU,CAACC,MAAX,GACZ;AAAEE,QAAAA,eAAe,EAAE,SAAnB;AAA8BC,QAAAA,MAAM,EAAE;AAAtC,OADY,GAEZ;AAAED,QAAAA,eAAe,EAAE,SAAnB;AAA8BC,QAAAA,MAAM,EAAE;AAAtC,OAFF;AAGA,0BACE,6CACIT,sBAAsB,CAACK,UAAD,EAAa;AACrCF,QAAAA,SADqC;AAErCI,QAAAA;AAFqC,OAAb,CAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOF,UAAU,CAACK,WAAlB,CANA,CADF;AAUD,KAlBN,CAFD,CAPA,CAPF,CADF;AAyCD;;AA/DkC;;AAkErC,eAAe9B,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\n\n\nclass Autocomplete extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { address: '' };\n  }\n\n  handleChange = address => {\n    this.setState({ address });\n  };\n\n  handleSelect = address => {\n    geocodeByAddress(address)\n    .then(results => getLatLng(results[0]))\n    .then(latLng => console.log('Success', latLng))\n    .catch(error => console.error('Error', error));\n  };\n\n  searchOptions = {\n    types: \"cities\"\n  }\n\n  render() {\n    return (\n      <PlacesAutocomplete\n      value={this.state.address}\n      onChange={this.handleChange}\n      onSelect={this.handleSelect}\n      searchOptions={this.searchOptions}\n      >\n      {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n        <div>\n        <input\n        {...getInputProps({\n          placeholder: 'Search City',\n          className: 'location-search-input',\n        })}\n        />\n        <div className=\"autocomplete-dropdown-container\">\n        {loading && <div>Loading...</div>}\n        {suggestions.map(suggestion => {\n          const className = suggestion.active\n          ? 'suggestion-item--active'\n          : 'suggestion-item';\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                return (\n                  <div\n                  {...getSuggestionItemProps(suggestion, {\n                    className,\n                    style,\n                  })}\n                  >\n                  <span>{suggestion.description}</span>\n                  </div>\n                  );\n              })}\n        </div>\n        </div>\n        )}\n      </PlacesAutocomplete>\n      );\n  }\n}\n\nexport default Autocomplete"]},"metadata":{},"sourceType":"module"}