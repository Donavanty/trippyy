{"ast":null,"code":"var _jsxFileName = \"/Users/lixupeng/NUS ACADS/ORBITAL/trippyy/frontend/[REACT] trippyy/src/Components/StartComponents/calendar.jsx\";\nimport React, { useReducer } from 'react';\nimport { DateRangeInput } from '@datepicker-react/styled';\nconst initialState = {\n  startDate: null,\n  endDate: null,\n  focusedInput: null\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'focusChange':\n      return { ...state,\n        focusedInput: action.payload\n      };\n\n    case 'dateChange':\n      return action.payload;\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/React.createElement(DateRangeInput, {\n    onDatesChange: data => dispatch({\n      type: 'dateChange',\n      payload: data\n    }),\n    onFocusChange: focusedInput => dispatch({\n      type: 'focusChange',\n      payload: focusedInput\n    }),\n    startDate: state.startDate // Date or null\n    ,\n    endDate: state.endDate // Date or null\n    ,\n    focusedInput: state.focusedInput // START_DATE, END_DATE or null\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lixupeng/NUS ACADS/ORBITAL/trippyy/frontend/[REACT] trippyy/src/Components/StartComponents/calendar.jsx"],"names":["React","useReducer","DateRangeInput","initialState","startDate","endDate","focusedInput","reducer","state","action","type","payload","Error","App","dispatch","data"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,cAAR,QAA6B,0BAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,IADQ;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,YAAY,EAAE;AAHK,CAArB;;AAMA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO,EAAC,GAAGF,KAAJ;AAAWF,QAAAA,YAAY,EAAEG,MAAM,CAACE;AAAhC,OAAP;;AACF,SAAK,YAAL;AACE,aAAOF,MAAM,CAACE,OAAd;;AACF;AACE,YAAM,IAAIC,KAAJ,EAAN;AANJ;AAQD;;AAED,SAASC,GAAT,GAAe;AACb,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBb,UAAU,CAACM,OAAD,EAAUJ,YAAV,CAApC;AAEA,sBACE,oBAAC,cAAD;AACE,IAAA,aAAa,EAAEY,IAAI,IAAID,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAE,YAAP;AAAqBC,MAAAA,OAAO,EAAEI;AAA9B,KAAD,CADjC;AAEE,IAAA,aAAa,EAAET,YAAY,IAAIQ,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAE,aAAP;AAAsBC,MAAAA,OAAO,EAAEL;AAA/B,KAAD,CAFzC;AAGE,IAAA,SAAS,EAAEE,KAAK,CAACJ,SAHnB,CAG8B;AAH9B;AAIE,IAAA,OAAO,EAAEI,KAAK,CAACH,OAJjB,CAI0B;AAJ1B;AAKE,IAAA,YAAY,EAAEG,KAAK,CAACF,YALtB,CAKoC;AALpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD;;AAED,eAAeO,GAAf","sourcesContent":["import React, {useReducer} from 'react'\nimport {DateRangeInput} from '@datepicker-react/styled'\n\nconst initialState = {\n  startDate: null,\n  endDate: null,\n  focusedInput: null,\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'focusChange':\n      return {...state, focusedInput: action.payload}\n    case 'dateChange':\n      return action.payload\n    default:\n      throw new Error()\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  return (\n    <DateRangeInput\n      onDatesChange={data => dispatch({type: 'dateChange', payload: data})}\n      onFocusChange={focusedInput => dispatch({type: 'focusChange', payload: focusedInput})}\n      startDate={state.startDate} // Date or null\n      endDate={state.endDate} // Date or null\n      focusedInput={state.focusedInput} // START_DATE, END_DATE or null\n    />\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}