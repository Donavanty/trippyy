{"ast":null,"code":"var _jsxFileName = \"/Users/lixupeng/NUS ACADS/ORBITAL/trippyy/frontend/[REACT] trippyy/src/Containers/MyTrips.jsx\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/actions';\nimport NavBar from '../Components/navBar';\n\nclass MyTrips extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tripIDs: [],\n      trips: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.onTryAutoSignup(); // Loads trips from backend\n\n    axios.get(\"http://127.0.0.1:8000/api/users/1\", {\n      headers: {\n        Authorization: \"Token \" + localStorage.token\n      }\n    }).then(res => {\n      this.setState({\n        tripIDs: res.data.trips\n      });\n    }).then(res => {\n      for (let id of this.state.tripIDs) {\n        console.log(\"id\", id);\n        axios.get(\"http://127.0.0.1:8000/api/trips/\" + id, {\n          headers: {\n            Authorization: \"Token \" + localStorage.token\n          }\n        }).then(res => {\n          // this.setState({trips: res.data})\n          this.setState(trips => ({\n            trips: [...trips, res.data]\n          }));\n        });\n      }\n    });\n    console.log(\"kek0\", this.state.trips.length);\n    console.log(\"kek1\", this.state.trips);\n  }\n\n  render() {\n    console.log(\"trips\", this.state.trips[\"owner\"]);\n    console.log(\"trips length\", this.state.trips.length);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 4\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron startBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    }, \" My Trips \"), this.props.isAuthenticated ? /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 8\n      }\n    }, \" \", this.state.trips[\"owner\"], \" \")) : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }\n    }, \" FAILE \")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    // Basic stats needed for NAV ------------\n    isAuthenticated: state.token !== null,\n    username: state.username // Basic stats needed for NAV ------------\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // Basic stats needed for NAV ------------\n    onTryAutoSignup: () => dispatch(actions.authCheckedState()),\n    logout: () => dispatch(actions.logouted()) // Basic stats needed for NAV ------------\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyTrips);","map":{"version":3,"sources":["/Users/lixupeng/NUS ACADS/ORBITAL/trippyy/frontend/[REACT] trippyy/src/Containers/MyTrips.jsx"],"names":["React","Component","axios","connect","actions","NavBar","MyTrips","state","tripIDs","trips","componentDidMount","props","onTryAutoSignup","get","headers","Authorization","localStorage","token","then","res","setState","data","id","console","log","length","render","isAuthenticated","mapStateToProps","username","mapDispatchToProps","dispatch","authCheckedState","logout","logouted"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/actions';\nimport NavBar from '../Components/navBar'\n\n\nclass MyTrips extends Component {\n\tstate = {\n\t\ttripIDs: [],\n\t\ttrips: []\n\t}\n\tcomponentDidMount() {\n\t\tthis.props.onTryAutoSignup();\n\n\t\t// Loads trips from backend\n\t\taxios.get(\"http://127.0.0.1:8000/api/users/1\", {\n\t\t\theaders: {Authorization: \"Token \" + localStorage.token}\n\t\t}).then(res => {\n\t\t\tthis.setState({tripIDs: res.data.trips});\n\t\t\t}).then(res => {\n\t\t\t\tfor (let id of this.state.tripIDs) {\n\t\t\t\t\tconsole.log(\"id\" , id);\n\t\t\t\t\taxios.get(\"http://127.0.0.1:8000/api/trips/\" + id, {\n\t\t\t\t\t\theaders: {Authorization: \"Token \" + localStorage.token}\n\t\t\t\t\t}).then(res => {\n\t\t\t\t\t\t// this.setState({trips: res.data})\n\t\t\t\t\t\tthis.setState(trips => ({\n  \t\t\t\t\t\t\ttrips: [...trips, res.data]\n\t\t\t\t\t\t}))\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\tconsole.log(\"kek0\" ,this.state.trips.length);\n\t\tconsole.log(\"kek1\" ,this.state.trips);\n\n\t\t\n\n\t}\n\n\trender() {\n\t\tconsole.log(\"trips\", this.state.trips[\"owner\"])\n\t\tconsole.log(\"trips length\", this.state.trips.length)\n\t\treturn (\n\t\t<React.Fragment>\n\t\t\t<NavBar {...this.props}/>\n\t\t\t<div className = \"jumbotron startBox\">\n\t\t\t\t<h1> My Trips </h1>\n\t\t\t\t{\n\t\t\t\t\t(this.props.isAuthenticated) ? \n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li> {this.state.trips[\"owner\"]} </li>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t: \n\t\t\t\t\t<h1> FAILE </h1>\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t</React.Fragment> \n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\t// Basic stats needed for NAV ------------\n\t\tisAuthenticated: state.token !== null,\n\t\tusername: state.username\n\t\t// Basic stats needed for NAV ------------\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\t// Basic stats needed for NAV ------------\n\t\tonTryAutoSignup: () => dispatch(actions.authCheckedState()),\n\t\tlogout: () => dispatch(actions.logouted())\n\t\t// Basic stats needed for NAV ------------\n\t}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(MyTrips);"]},"metadata":{},"sourceType":"module"}