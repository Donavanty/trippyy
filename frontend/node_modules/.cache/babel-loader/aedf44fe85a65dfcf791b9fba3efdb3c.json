{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const authStarted = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccessed = token => {\n  return {\n    token: token,\n    type: actionTypes.AUTH_SUCCESS\n  };\n};\nexport const authFailed = error => {\n  return {\n    error: error,\n    type: actionTypes.AUTH_FAIL\n  };\n};\nexport const logouted = () => {\n  localStorage.removeItem('user');\n  localStorage.removeItem('expirationDate');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeouted = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authLogined = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post('http://127.0.0.1:8000/rest-auth/login/', {\n      username: username,\n      password: password\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignuped = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post('http://127.0.0.1:8000/rest-auth/registration/', {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authCheckedState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/lixupeng/NUS ACADS/ORBITAL/trippyy/frontend/[REACT] trippyy/src/store/actions/auth.js"],"names":["actionTypes","axios","authStarted","type","AUTH_START","authSuccessed","token","AUTH_SUCCESS","authFailed","error","AUTH_FAIL","logouted","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeouted","expirationTime","dispatch","setTimeout","logout","authLogined","username","password","authStart","post","then","res","data","key","expirationDate","Date","getTime","setItem","authSuccess","checkAuthTimeout","catch","err","authFail","authSignuped","email","password1","password2","authCheckedState","getItem","undefined"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authStarted = () => {\n\treturn {\n\t\ttype: actionTypes.AUTH_START\n\t}\n}\n\nexport const authSuccessed = (token) => {\n\treturn {\n\t\ttoken: token,\n\t\ttype: actionTypes.AUTH_SUCCESS\n\t}\n}\n\nexport const authFailed = (error) => {\n\treturn {\n\t\terror: error,\n\t\ttype: actionTypes.AUTH_FAIL\n\t}\n}\n\nexport const logouted = () => {\n\tlocalStorage.removeItem('user');\n\tlocalStorage.removeItem('expirationDate');\n\treturn {\n\t\ttype: actionTypes.AUTH_LOGOUT\n\t}\n}\n\nexport const checkAuthTimeouted = expirationTime => {\n\treturn dispatch => {\n\t\tsetTimeout( () => {\n\t\t\tdispatch(logout());\n\t\t}, expirationTime * 1000)\n\t}\n}\nexport const authLogined = (username, password) => {\n\treturn dispatch => {\n\t\tdispatch(authStart());\n\t\taxios.post('http://127.0.0.1:8000/rest-auth/login/', {\n\t\t\tusername: username,\n\t\t\tpassword: password\n\t\t}).then(res => {\n\t\t\tconst token = res.data.key;\n\t\t\tconst expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n\t\t\tlocalStorage.setItem('token', token);\n\t\t\tlocalStorage.setItem('expirationDate', expirationDate);\n\t\t\tdispatch(authSuccess(token));\n\t\t\tdispatch(checkAuthTimeout(3600));\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch(authFail(err))\n\t\t})\n\t}\n}\n\nexport const authSignuped = (username, email, password1, password2) => {\n\treturn dispatch => {\n\t\tdispatch(authStart());\n\t\taxios.post('http://127.0.0.1:8000/rest-auth/registration/', {\n\t\t\tusername: username,\n\t\t\temail: email,\n\t\t\tpassword1: password1,\n\t\t\tpassword2: password2\n\t\t}).then(res => {\n\t\t\tconst token = res.data.key;\n\t\t\tconst expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n\t\t\tlocalStorage.setItem('token', token);\n\t\t\tlocalStorage.setItem('expirationDate', expirationDate);\n\t\t\tdispatch(authSuccess(token));\n\t\t\tdispatch(checkAuthTimeout(3600));\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch(authFail(err))\n\t\t})\n\t}\n}\n\nexport const authCheckedState = () => {\n\treturn dispatch => {\n\t\tconst token = localStorage.getItem('token');\n\t\tif (token === undefined) {\n\t\t\tdispatch(logout());\n\t\t} else {\n\t\t\tconst expirationDate = new Date(localStorage.getItem('expirationDate'));\n\t\t\tif (expirationDate <= new Date() ) {\n\t\t\t\tdispatch(logout());\n\t\t\t} else {\n\t\t\t\tdispatch(authSuccess(token));\n\t\t\t\tdispatch(checkAuthTimeout( (expirationDate.getTime() - new Date().getTime()) / 1000 ));\n\t\t\t}\n\n\t\t}\n\t}\t\n}"]},"metadata":{},"sourceType":"module"}