{"ast":null,"code":"var _jsxFileName = \"/Users/lixupeng/NUS ACADS/ORBITAL/trippyy-working/trippyy/frontend/src/Components/Map.jsx\";\n// Basic Imports\nimport React, { Component, Fragment } from \"react\"; // -------------------------------------------------------------------------\n//Imports needed for redux\n\nimport * as actions from '../store/actions/actions';\nimport { connect } from 'react-redux'; // -------------------------------------------------------------------------\n\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\n\nclass Map extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      trip: null,\n      startLat: null,\n      startLng: null\n    };\n    this.WrappedMap = withScriptjs(withGoogleMap(props => /*#__PURE__*/React.createElement(GoogleMap, {\n      defaultZoom: 12,\n      defaultCenter: {\n        lat: `1.290270`,\n        lng: 103.851959\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, props.children)));\n  }\n\n  componentDidMount() {\n    this.props.checkedTrip();\n    this.setState({\n      startLng: JSON.parse(localStorage.trip)[\"lng\"],\n      startLat: JSON.parse(localStorage.trip)[\"lat\"]\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.trip !== null) {\n      return {\n        trip: nextProps.trip\n      };\n    } else return null;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(this.WrappedMap, {\n      googleMapURL: this.props.googleMapURL,\n      loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: `100%`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 37\n        }\n      }),\n      containerElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: `600px`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 39\n        }\n      }),\n      mapElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: `100%`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }\n      }),\n      center: {\n        lat: 40.730610,\n        lng: -73.935242\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      position: {\n        lat: -34.397,\n        lng: 150.644\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nMap.defaultProps = {\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyB-tj53yeTQiKnUmi_Jr2a7caz5RJVY60Y&v=3.exp&libraries=geometry,drawing,places\"\n};\n\nconst mapStateToProps = state => {\n  return {\n    trip: state.trip\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    checkedTrip: () => dispatch(actions.checkedTrip())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);","map":{"version":3,"sources":["/Users/lixupeng/NUS ACADS/ORBITAL/trippyy-working/trippyy/frontend/src/Components/Map.jsx"],"names":["React","Component","Fragment","actions","connect","withScriptjs","withGoogleMap","GoogleMap","Marker","Map","state","trip","startLat","startLng","WrappedMap","props","lat","lng","children","componentDidMount","checkedTrip","setState","JSON","parse","localStorage","getDerivedStateFromProps","nextProps","prevState","componentDidUpdate","prevProps","snapshot","render","googleMapURL","height","defaultProps","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["// Basic Imports\nimport React, { Component, Fragment } from \"react\";\n// -------------------------------------------------------------------------\n\n//Imports needed for redux\nimport * as actions from '../store/actions/actions';\nimport { connect } from 'react-redux';\n// -------------------------------------------------------------------------\nimport {\n    withScriptjs,\n    withGoogleMap,\n    GoogleMap,\n    Marker\n} from \"react-google-maps\";\n\n\nclass Map extends Component{\n\n    state = {\n        trip: null,\n        startLat: null,\n        startLng: null\n    }\n    componentDidMount() {\n        this.props.checkedTrip();\n        this.setState({\n            startLng: JSON.parse(localStorage.trip)[\"lng\"],\n            startLat: JSON.parse(localStorage.trip)[\"lat\"],\n        })\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState){\n      if (nextProps.trip!==null){\n         return { trip: nextProps.trip };\n      }\n      else return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    static defaultProps = {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyB-tj53yeTQiKnUmi_Jr2a7caz5RJVY60Y&v=3.exp&libraries=geometry,drawing,places\",\n    }\n\n    WrappedMap = withScriptjs(withGoogleMap(props =>\n        <GoogleMap\n          defaultZoom={12}\n          defaultCenter={{ lat: `1.290270`, lng: 103.851959 }}\n        >\n            {props.children}\n        </GoogleMap>\n      ));\n\n\n\n    render() {\n        return (\n            <Fragment>\n                <this.WrappedMap\n                    googleMapURL={this.props.googleMapURL}\n                    loadingElement={<div style={{ height: `100%` }} />}\n                    containerElement={<div style={{ height: `600px` }} />}\n                    mapElement={<div style={{ height: `100%` }} />}\n                    center= {{ lat: 40.730610, lng:  -73.935242 }} \n                >\n                    <Marker\n                        position={{ lat: -34.397, lng: 150.644 }}\n                    />\n\n                </this.WrappedMap>\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        trip: state.trip\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        checkedTrip: () => dispatch(actions.checkedTrip()),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);"]},"metadata":{},"sourceType":"module"}