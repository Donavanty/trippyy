{"ast":null,"code":"import _toConsumableArray from\"/Users/lixupeng/NUS ACADS/ORBITAL/trippyy-working/trippyy/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/lixupeng/NUS ACADS/ORBITAL/trippyy-working/trippyy/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/lixupeng/NUS ACADS/ORBITAL/trippyy-working/trippyy/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/lixupeng/NUS ACADS/ORBITAL/trippyy-working/trippyy/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/lixupeng/NUS ACADS/ORBITAL/trippyy-working/trippyy/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";// Basic Imports\nimport React,{Component,Fragment}from\"react\";// -------------------------------------------------------------------------\n//Imports needed for redux\nimport*as actions from'../store/actions/actions';import{connect}from'react-redux';// -------------------------------------------------------------------------\nimport axios from\"axios\";import NavBar from'../Components/navBar';import{Spinner}from'react-bootstrap';var DATABASE_URL=\"https://trippyy-backend.herokuapp.com/\";var MyTrips=/*#__PURE__*/function(_Component){_inherits(MyTrips,_Component);var _super=_createSuper(MyTrips);function MyTrips(){var _this;_classCallCheck(this,MyTrips);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={tripIDs:[],trips:[],local_loading:null};return _this;}_createClass(MyTrips,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.setState({local_loading:true});//Updates login status to redux.\nthis.props.onTryAutoSignup();//If user is not logged in, redirect to Login page\nif(localStorage.getItem('token')==null||localStorage.getItem('token')==undefined){this.props.history.push({pathname:\"/login\",state:{from:this.props.location.pathname}});}// Loads trips from backend assuming logged in, catch doesnt handle!\n// Need to add checks \ntry{axios.get(DATABASE_URL+\"api/users/\"+localStorage.userId,{headers:{Authorization:\"Token \"+localStorage.token}}).then(function(res){_this2.setState({tripIDs:res.data.trips});}).then(function(res){var _loop=function _loop(i){axios.get(DATABASE_URL+\"api/trips/\"+_this2.state.tripIDs[i],{headers:{Authorization:\"Token \"+localStorage.token}}).then(function(res){_this2.setState({trips:[].concat(_toConsumableArray(_this2.state.trips),[res.data])});//If it is loaded last item, then change loading to false.\nif(i===_this2.state.tripIDs.length-1){_this2.setState({local_loading:false});}});};for(var i=0;i<_this2.state.tripIDs.length;i++){_loop(i);}});}catch(error){alert(error);this.props.history.push(\"/\");}}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(NavBar,{from:this.props.location.pathname}),/*#__PURE__*/React.createElement(\"div\",{className:\"jumbotron startBox\"},/*#__PURE__*/React.createElement(\"h1\",null,\" My Trips \"),this.state.local_loading?/*#__PURE__*/React.createElement(Spinner,{animation:\"border\",role:\"status\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sr-only\"},\"Loading...\")):this.state.trips.length>0?/*#__PURE__*/React.createElement(\"ul\",null,this.state.trips.map(function(value,index){return/*#__PURE__*/React.createElement(\"li\",{key:index},\" \",value.tripName,\" \");})):/*#__PURE__*/React.createElement(\"p\",null,\" No trips available \")));}}]);return MyTrips;}(Component);var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.token!==null,username:state.username};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onTryAutoSignup:function onTryAutoSignup(){return dispatch(actions.authCheckedState());}};};export default connect(mapStateToProps,mapDispatchToProps)(MyTrips);","map":{"version":3,"sources":["/Users/lixupeng/NUS ACADS/ORBITAL/trippyy-working/trippyy/frontend/src/Containers/MyTrips.jsx"],"names":["React","Component","Fragment","actions","connect","axios","NavBar","Spinner","DATABASE_URL","MyTrips","state","tripIDs","trips","local_loading","setState","props","onTryAutoSignup","localStorage","getItem","undefined","history","push","pathname","from","location","get","userId","headers","Authorization","token","then","res","data","i","length","error","alert","map","value","index","tripName","mapStateToProps","isAuthenticated","username","mapDispatchToProps","dispatch","authCheckedState"],"mappings":"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","sourcesContent":["// Basic Imports\nimport React, { Component, Fragment } from \"react\";\n// -------------------------------------------------------------------------\n\n//Imports needed for redux\nimport * as actions from '../store/actions/actions';\nimport { connect } from 'react-redux';\n// -------------------------------------------------------------------------\n\nimport axios from \"axios\";\nimport NavBar from '../Components/navBar';\nimport { Spinner } from 'react-bootstrap';\n\nconst DATABASE_URL = \"https://trippyy-backend.herokuapp.com/\";\n\nclass MyTrips extends Component {\n\tstate = {\n\t\ttripIDs: [],\n\t\ttrips: [],\n\t\tlocal_loading: null\n\t}\n\tcomponentDidMount() {\n\n\t\tthis.setState({local_loading: true});\n\n\t\t//Updates login status to redux.\n\t\tthis.props.onTryAutoSignup();\n\n\t\t//If user is not logged in, redirect to Login page\n\t\tif (localStorage.getItem('token') == null || localStorage.getItem('token') == undefined) {\n\t\t\tthis.props.history.push({\n\t\t\t\t\tpathname: \"/login\",\n\t\t\t\t\tstate: { from: this.props.location.pathname }\n\t\t\t\t});\n\t\t}\n\n\t\t// Loads trips from backend assuming logged in, catch doesnt handle!\n\t\t// Need to add checks \n\t\ttry {\n\t\t\taxios.get(DATABASE_URL + \"api/users/\" + localStorage.userId, {\n\t\t\t\theaders: {Authorization: \"Token \" + localStorage.token}\n\t\t\t}).then(res => {\n\t\t\t\tthis.setState({tripIDs: res.data.trips});\n\t\t\t}).then(res => {\n\t\t\t\tfor (let i = 0; i < this.state.tripIDs.length; i++) {\n\t\t\t\t\taxios.get(DATABASE_URL + \"api/trips/\" + this.state.tripIDs[i], \n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {Authorization: \"Token \" + localStorage.token}\n\t\t\t\t\t}).then( res => {\n\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t{trips: [...this.state.trips, res.data]}\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t//If it is loaded last item, then change loading to false.\n\t\t\t\t\t\tif (i === this.state.tripIDs.length - 1) {\n\t\t\t\t\t\t\tthis.setState({local_loading: false});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\t\n\t\t\t\t}\n\t\t\t})\n\t\t} catch (error) {\n\t\t\talert(error);\n\t\t\tthis.props.history.push(\"/\");\n\t\t}\n\t}\n\nrender() {\n\treturn (\n\t\t<React.Fragment>\n\t\t<NavBar from={this.props.location.pathname}/>\n\t\t<div className = \"jumbotron startBox\">\n\t\t<h1> My Trips </h1>\n\n\t\t{ \n\t\t\tthis.state.local_loading ? \n\t\t\t\t<Spinner animation=\"border\" role=\"status\">\n\t\t\t\t  <span className=\"sr-only\">Loading...</span>\n\t\t\t\t</Spinner>\n\t\t\t:\n\t\t\t\t(this.state.trips.length > 0) ? \n\t\t\t\t\t<ul>\n\t\t\t\t\t{this.state.trips.map((value,index) => <li key={index}> {value.tripName} </li>)}\n\t\t\t\t\t</ul>\n\t\t\t\t: \n\t\t\t\t\t<p> No trips available </p>\n\t\t\t\t\n\t\t}\n\t\t</div>\n\n\t\t</React.Fragment> \n\t\t);\n}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisAuthenticated: state.token !== null,\n\t\tusername: state.username\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonTryAutoSignup: () => dispatch(actions.authCheckedState()),\n\t}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(MyTrips);"]},"metadata":{},"sourceType":"module"}