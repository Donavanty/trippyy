{"ast":null,"code":"var _jsxFileName = \"/Users/lixupeng/NUS ACADS/ORBITAL/trippyy-working/trippyy/frontend/src/Components/StartComponents/InputForm.jsx\";\nimport React, { Component } from 'react';\nimport \"./inputForm.css\";\nimport axios from \"axios\";\nimport Calendar from \"./Calendar\";\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/actions';\nimport { Link } from 'react-router-dom';\nimport { Spinner } from 'react-bootstrap';\nimport Autocomplete from './Autocomplete';\n\nclass InputForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newTripCreated: false,\n      goToShoppingPage: false\n    };\n\n    this.updateDates = (startDate, endDate) => {\n      this.setState({\n        startDate,\n        endDate\n      });\n    };\n\n    this.updateCountry = (countryName, latLng) => {\n      this.setState({\n        countryName,\n        latLng\n      });\n    };\n\n    this.newTrip = event => {\n      if (this.state.startDate == null || this.state.endDate == null) {\n        alert(\"Please choose dates first!\");\n      } else if (this.state.countryName == null || this.state.latLng == null) {\n        alert(\"Please select a country from the list!\");\n      } else {\n        event.preventDefault();\n        this.props.newTrip(this.state.countryName, this.state.latLng[\"lat\"], this.state.latLng[\"lng\"], this.state.startDate, this.state.endDate);\n        this.setState({\n          newTripCreated: true\n        });\n      }\n    };\n  }\n\n  //If new trip created is true, and loading is complete, then go to shopping page.\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.loading === false && prevState.newTripCreated === true) {\n      return {\n        goToShoppingPage: true\n      };\n    } else return null;\n  } //Happens upon receiving updated information.\n\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state.goToShoppingPage === true) {\n      this.props.history.push(\"/shopping\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid align-items-center inputForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 8\n      }\n    }, this.props.isAuthenticated ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 10\n      }\n    }, \"Hello, \", this.props.username, \"!\") : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 52\n      }\n    }, \"Hello stranger:)\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.newTrip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, \" Enter Country: \"), /*#__PURE__*/React.createElement(Autocomplete, {\n      updateCountry: this.updateCountry,\n      name: \"country\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    }, \" Enter dates: \"), /*#__PURE__*/React.createElement(Calendar, {\n      updateDates: this.updateDates,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 18\n      }\n    }, !this.props.loading ? /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 20\n      }\n    }, \" Submit \") : /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 10\n      }\n    }, \"Loading...\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null,\n    username: state.username,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    newTrip: (country, startDate, endDate) => dispatch(actions.newTrip(country, startDate, endDate))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputForm);","map":{"version":3,"sources":["/Users/lixupeng/NUS ACADS/ORBITAL/trippyy-working/trippyy/frontend/src/Components/StartComponents/InputForm.jsx"],"names":["React","Component","axios","Calendar","connect","actions","Link","Spinner","Autocomplete","InputForm","state","newTripCreated","goToShoppingPage","updateDates","startDate","endDate","setState","updateCountry","countryName","latLng","newTrip","event","alert","preventDefault","props","getDerivedStateFromProps","nextProps","prevState","loading","componentDidUpdate","prevProps","snapshot","history","push","render","isAuthenticated","username","mapStateToProps","token","mapDispatchToProps","dispatch","country"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport \"./inputForm.css\"\nimport axios from \"axios\";\nimport Calendar from \"./Calendar\"\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/actions';\nimport { Link } from 'react-router-dom';\nimport { Spinner } from 'react-bootstrap';\nimport Autocomplete from './Autocomplete'\n\nclass InputForm extends Component {\n\n\tstate = {\n\t\tnewTripCreated: false,\n\t\tgoToShoppingPage: false,\n\t}\n\n\t//Called from component Calendar, in which upon input of dates, local state would be updated\n\tupdateDates = (startDate, endDate) => {\n\t\tthis.setState({startDate, endDate});\n\t}\n\n\t//Called from component Autocomplete, in which upon selection of country,\n\t//Current state would get updated.\n\tupdateCountry = (countryName, latLng) => {\n\t\tthis.setState({countryName, latLng});\n\t}\n\n\t// Upon pressing the submit button, creates a new trip, and checks for \n\t// basic input validation before submitting.\n\tnewTrip = (event) => {\n\t\tif (this.state.startDate == null || this.state.endDate == null) {\n\t\t\talert(\"Please choose dates first!\");\n\t\t} else if (this.state.countryName == null || this.state.latLng == null) {\n\t\t\talert(\"Please select a country from the list!\");\n\t\t} else {\n\t\t\tevent.preventDefault();\n\t\t\tthis.props.newTrip(this.state.countryName, this.state.latLng[\"lat\"], this.state.latLng[\"lng\"], this.state.startDate, this.state.endDate);\n\t\t\tthis.setState({newTripCreated: true});\n\t\t}\n\t}\n\n\t//If new trip created is true, and loading is complete, then go to shopping page.\n\tstatic getDerivedStateFromProps(nextProps, prevState){\n\t  if (nextProps.loading===false && prevState.newTripCreated===true){\n\t     return { goToShoppingPage: true };\n\t  }\n\t  else return null;\n\t}\n\n\t//Happens upon receiving updated information.\n    componentDidUpdate(prevProps, prevState, snapshot) {\n    \tif (this.state.goToShoppingPage === true) {\n    \t\tthis.props.history.push(\"/shopping\");\n    \t}\n    }\n\n\trender() {\n\t\treturn (\n\t      <div className = \"container-fluid align-items-center inputForm\">\n\t      \t{\n\t    \t\t (this.props.isAuthenticated) ?\n\t    \t\t\t <h1>Hello, {this.props.username}!</h1> : (<h1>Hello stranger:)</h1>)\n\t    \t}\n\t          <div className = \"jumbotron\">\n\t              <form onSubmit = {this.newTrip}> \n\t                <div>\n\t                \t<h3> Enter Country: </h3>\n\t                \t<Autocomplete updateCountry={this.updateCountry} name = \"country\"/>\n\t                </div>\n\n\t                <div className =\"inputForm\">\n\t                \t<h3> Enter dates: </h3>\n\t                \t<Calendar updateDates={this.updateDates}/>\n\t                </div>\n\t                \n\t                <div className = \"inputForm\">\n\t                \t{ !this.props.loading ? \n\t                \t\t<button> Submit </button> \n\t                \t\t:\n\t\t\t\t\t\t\t<Spinner animation=\"border\" role=\"status\">\n\t\t\t\t\t\t\t  <span className=\"sr-only\">Loading...</span>\n\t\t\t\t\t\t\t</Spinner>\n\n\t                \t}\n\t                </div>\n\t              </form>\n\n\t              \n\t          </div>\n\t      </div>);\n\n\t}\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.token !== null,\n        username: state.username,\n        loading: state.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        newTrip: (country, startDate, endDate) => dispatch(actions.newTrip(country, startDate, endDate)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputForm);"]},"metadata":{},"sourceType":"module"}