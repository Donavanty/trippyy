{"ast":null,"code":"import _classCallCheck from\"/Users/lixupeng/NUS ACADS/ORBITAL/trippyy-working/trippyy/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/lixupeng/NUS ACADS/ORBITAL/trippyy-working/trippyy/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/lixupeng/NUS ACADS/ORBITAL/trippyy-working/trippyy/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/lixupeng/NUS ACADS/ORBITAL/trippyy-working/trippyy/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';/* global google */import PlacesAutocomplete,{geocodeByAddress,getLatLng}from'react-places-autocomplete';var Autocomplete=/*#__PURE__*/function(_Component){_inherits(Autocomplete,_Component);var _super=_createSuper(Autocomplete);function Autocomplete(props){var _this;_classCallCheck(this,Autocomplete);_this=_super.call(this,props);_this.handleChange=function(address){_this.setState({address:address});};_this.handleSelect=function(address){_this.setState({address:address});geocodeByAddress(address).then(function(results){return getLatLng(results[0]);}).then(function(latLng){return _this.props.updateCountry(address,latLng);}).catch(function(error){return console.log(error);});};_this.searchOptions={types:['(regions)']};_this.state={address:''};return _this;}_createClass(Autocomplete,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(PlacesAutocomplete,{value:this.state.address,onChange:this.handleChange,onSelect:this.handleSelect,searchOptions:this.searchOptions,highlightFirstSuggestion:true},function(_ref){var getInputProps=_ref.getInputProps,suggestions=_ref.suggestions,getSuggestionItemProps=_ref.getSuggestionItemProps,loading=_ref.loading;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",getInputProps({placeholder:'Search City',className:'location-search-input'})),/*#__PURE__*/React.createElement(\"div\",{className:\"autocomplete-dropdown-container\"},loading,suggestions.map(function(suggestion){var className=suggestion.active?'suggestion-item--active':'suggestion-item';// inline style for demonstration purpose\nvar style=suggestion.active?{backgroundColor:'#fafafa',cursor:'pointer'}:{backgroundColor:'#ffffff',cursor:'pointer'};return/*#__PURE__*/React.createElement(\"div\",getSuggestionItemProps(suggestion,{className:className,style:style}),/*#__PURE__*/React.createElement(\"span\",null,suggestion.description));})));});}}]);return Autocomplete;}(Component);export default Autocomplete;","map":{"version":3,"sources":["/Users/lixupeng/NUS ACADS/ORBITAL/trippyy-working/trippyy/frontend/src/Components/StartComponents/Autocomplete.jsx"],"names":["React","Component","PlacesAutocomplete","geocodeByAddress","getLatLng","Autocomplete","props","handleChange","address","setState","handleSelect","then","results","latLng","updateCountry","catch","error","console","log","searchOptions","types","state","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description"],"mappings":"otBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,mBAEA,MAAOC,CAAAA,kBAAP,EACEC,gBADF,CAEEC,SAFF,KAGO,2BAHP,C,GAMMC,CAAAA,Y,4GACJ,sBAAYC,KAAZ,CAAmB,8CACjB,uBAAMA,KAAN,EADiB,MAKnBC,YALmB,CAKJ,SAAAC,OAAO,CAAI,CACxB,MAAKC,QAAL,CAAc,CAAED,OAAO,CAAPA,OAAF,CAAd,EACD,CAPkB,OASnBE,YATmB,CASJ,SAAAF,OAAO,CAAI,CACxB,MAAKC,QAAL,CAAc,CAAED,OAAO,CAAPA,OAAF,CAAd,EACAL,gBAAgB,CAACK,OAAD,CAAhB,CACCG,IADD,CACM,SAAAC,OAAO,QAAIR,CAAAA,SAAS,CAACQ,OAAO,CAAC,CAAD,CAAR,CAAb,EADb,EAECD,IAFD,CAEM,SAAAE,MAAM,QAAI,OAAKP,KAAL,CAAWQ,aAAX,CAAyBN,OAAzB,CAAkCK,MAAlC,CAAJ,EAFZ,EAGCE,KAHD,CAGO,SAAAC,KAAK,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ,EAHZ,EAID,CAfkB,OAiBnBG,aAjBmB,CAiBH,CACdC,KAAK,CAAE,CAAC,WAAD,CADO,CAjBG,CAEjB,MAAKC,KAAL,CAAa,CAAEb,OAAO,CAAE,EAAX,CAAb,CAFiB,aAGlB,C,gEAkBQ,CACP,mBACE,oBAAC,kBAAD,EACA,KAAK,CAAE,KAAKa,KAAL,CAAWb,OADlB,CAEA,QAAQ,CAAE,KAAKD,YAFf,CAGA,QAAQ,CAAE,KAAKG,YAHf,CAIA,aAAa,CAAE,KAAKS,aAJpB,CAKA,wBAAwB,CAAE,IAL1B,EAOC,kBAAGG,CAAAA,aAAH,MAAGA,aAAH,CAAkBC,WAAlB,MAAkBA,WAAlB,CAA+BC,sBAA/B,MAA+BA,sBAA/B,CAAuDC,OAAvD,MAAuDA,OAAvD,oBACC,4CACA,4BACIH,aAAa,CAAC,CAChBI,WAAW,CAAE,aADG,CAEhBC,SAAS,CAAE,uBAFK,CAAD,CADjB,CADA,cAOA,2BAAK,SAAS,CAAC,iCAAf,EACCF,OADD,CAECF,WAAW,CAACK,GAAZ,CAAgB,SAAAC,UAAU,CAAI,CAC7B,GAAMF,CAAAA,SAAS,CAAGE,UAAU,CAACC,MAAX,CAChB,yBADgB,CAEhB,iBAFF,CAGM;AACA,GAAMC,CAAAA,KAAK,CAAGF,UAAU,CAACC,MAAX,CACZ,CAAEE,eAAe,CAAE,SAAnB,CAA8BC,MAAM,CAAE,SAAtC,CADY,CAEZ,CAAED,eAAe,CAAE,SAAnB,CAA8BC,MAAM,CAAE,SAAtC,CAFF,CAGA,mBACE,0BACIT,sBAAsB,CAACK,UAAD,CAAa,CACrCF,SAAS,CAATA,SADqC,CAErCI,KAAK,CAALA,KAFqC,CAAb,CAD1B,cAMA,gCAAOF,UAAU,CAACK,WAAlB,CANA,CADF,CAUD,CAlBN,CAFD,CAPA,CADD,EAPD,CADF,CA0CD,C,0BAjEwBjC,S,EAoE3B,cAAeI,CAAAA,YAAf","sourcesContent":["import React, { Component } from 'react';\n/* global google */\n\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\n\n\nclass Autocomplete extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { address: '' };\n  }\n\n  handleChange = address => {\n    this.setState({ address });\n  };\n\n  handleSelect = address => {\n    this.setState({ address });\n    geocodeByAddress(address)\n    .then(results => getLatLng(results[0]))\n    .then(latLng => this.props.updateCountry(address, latLng))\n    .catch(error => console.log(error));\n  };\n\n  searchOptions = {\n    types: ['(regions)']\n  }\n\n  render() {\n    return (\n      <PlacesAutocomplete\n      value={this.state.address}\n      onChange={this.handleChange}\n      onSelect={this.handleSelect}\n      searchOptions={this.searchOptions}\n      highlightFirstSuggestion={true}\n      >\n      {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n        <div>\n        <input\n        {...getInputProps({\n          placeholder: 'Search City',\n          className: 'location-search-input',\n        })}\n        />\n        <div className=\"autocomplete-dropdown-container\">\n        {loading}\n        {suggestions.map(suggestion => {\n          const className = suggestion.active\n          ? 'suggestion-item--active'\n          : 'suggestion-item';\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                return (\n                  <div\n                  {...getSuggestionItemProps(suggestion, {\n                    className,\n                    style,\n                  })}\n                  >\n                  <span>{suggestion.description}</span>\n                  </div>\n                  );\n              })}\n        </div>\n        </div>\n        )}\n      </PlacesAutocomplete>\n      );\n  }\n}\n\nexport default Autocomplete"]},"metadata":{},"sourceType":"module"}