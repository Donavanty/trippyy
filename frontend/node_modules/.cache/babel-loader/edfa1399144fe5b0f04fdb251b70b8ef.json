{"ast":null,"code":"import _classCallCheck from\"/Users/lixupeng/NUS ACADS/ORBITAL/trippyy-working/trippyy/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/lixupeng/NUS ACADS/ORBITAL/trippyy-working/trippyy/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/lixupeng/NUS ACADS/ORBITAL/trippyy-working/trippyy/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/lixupeng/NUS ACADS/ORBITAL/trippyy-working/trippyy/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";// Basic Imports\nimport React,{Component,Fragment}from\"react\";// -------------------------------------------------------------------------\n//Imports needed for redux\nimport*as actions from'../../store/actions/actions';import{connect}from'react-redux';// -------------------------------------------------------------------------\nimport\"./inputForm.css\";import axios from\"axios\";import Calendar from\"./Calendar\";import{Link}from'react-router-dom';import{Spinner}from'react-bootstrap';import Autocomplete from'./Autocomplete';var InputForm=/*#__PURE__*/function(_Component){_inherits(InputForm,_Component);var _super=_createSuper(InputForm);function InputForm(){var _this;_classCallCheck(this,InputForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={newTripCreated:false,goToShoppingPage:false};_this.updateDates=function(startDate,endDate){_this.setState({startDate:startDate,endDate:endDate});};_this.updateCountry=function(countryName,latLng){_this.setState({countryName:countryName,latLng:latLng});};_this.newTrip=function(event){if(_this.state.startDate==null||_this.state.endDate==null){alert(\"Please choose dates first!\");}else if(_this.state.countryName==null||_this.state.latLng==null){alert(\"Please select a country from the list!\");}else{event.preventDefault();_this.props.newTrip(_this.state.countryName,_this.state.latLng[\"lat\"],_this.state.latLng[\"lng\"],_this.state.startDate,_this.state.endDate);_this.setState({newTripCreated:true});}};return _this;}_createClass(InputForm,[{key:\"componentDidUpdate\",//Happens upon receiving updated information.\nvalue:function componentDidUpdate(prevProps,prevState,snapshot){if(this.state.goToShoppingPage===true){this.props.history.push(\"/shopping\");}}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"container-fluid align-items-center inputForm\"},this.props.isAuthenticated?/*#__PURE__*/React.createElement(\"h1\",null,\"Hello, \",this.props.username,\"!\"):/*#__PURE__*/React.createElement(\"h1\",null,\"Hello stranger:)\"),/*#__PURE__*/React.createElement(\"div\",{className:\"jumbotron\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.newTrip},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,\" Enter Country: \"),/*#__PURE__*/React.createElement(Autocomplete,{updateCountry:this.updateCountry,name:\"country\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"inputForm\"},/*#__PURE__*/React.createElement(\"h3\",null,\" Enter dates: \"),/*#__PURE__*/React.createElement(Calendar,{updateDates:this.updateDates})),/*#__PURE__*/React.createElement(\"div\",{className:\"inputForm\"},!this.props.loading?/*#__PURE__*/React.createElement(\"button\",null,\" Submit \"):/*#__PURE__*/React.createElement(Spinner,{animation:\"border\",role:\"status\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sr-only\"},\"Loading...\"))))));}}],[{key:\"getDerivedStateFromProps\",//If new trip created is true, and loading is complete, then go to shopping page.\nvalue:function getDerivedStateFromProps(nextProps,prevState){if(nextProps.loading===false&&prevState.newTripCreated===true){return{goToShoppingPage:true};}else return null;}}]);return InputForm;}(Component);var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.token!==null,username:state.username,loading:state.loading};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{newTrip:function newTrip(tripCountry,tripLat,tripLng,startDate,endDate){return dispatch(actions.newTrip(tripCountry,tripLat,tripLng,startDate,endDate));}};};export default connect(mapStateToProps,mapDispatchToProps)(InputForm);","map":{"version":3,"sources":["/Users/lixupeng/NUS ACADS/ORBITAL/trippyy-working/trippyy/frontend/src/Components/StartComponents/InputForm.jsx"],"names":["React","Component","Fragment","actions","connect","axios","Calendar","Link","Spinner","Autocomplete","InputForm","state","newTripCreated","goToShoppingPage","updateDates","startDate","endDate","setState","updateCountry","countryName","latLng","newTrip","event","alert","preventDefault","props","prevProps","prevState","snapshot","history","push","isAuthenticated","username","loading","nextProps","mapStateToProps","token","mapDispatchToProps","dispatch","tripCountry","tripLat","tripLng"],"mappings":"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","sourcesContent":["// Basic Imports\nimport React, { Component, Fragment } from \"react\";\n// -------------------------------------------------------------------------\n\n//Imports needed for redux\nimport * as actions from '../../store/actions/actions';\nimport { connect } from 'react-redux';\n// -------------------------------------------------------------------------\n\nimport \"./inputForm.css\"\nimport axios from \"axios\";\nimport Calendar from \"./Calendar\"\nimport { Link } from 'react-router-dom';\nimport { Spinner } from 'react-bootstrap';\nimport Autocomplete from './Autocomplete'\n\nclass InputForm extends Component {\n\n\tstate = {\n\t\tnewTripCreated: false,\n\t\tgoToShoppingPage: false,\n\t}\n\n\t//Called from component Calendar, in which upon input of dates, local state would be updated\n\tupdateDates = (startDate, endDate) => {\n\t\tthis.setState({startDate, endDate});\n\t}\n\n\t//Called from component Autocomplete, in which upon selection of country,\n\t//Current state would get updated.\n\tupdateCountry = (countryName, latLng) => {\n\t\tthis.setState({countryName, latLng});\n\t}\n\n\t// Upon pressing the submit button, creates a new trip, and checks for \n\t// basic input validation before submitting.\n\tnewTrip = (event) => {\n\t\tif (this.state.startDate == null || this.state.endDate == null) {\n\t\t\talert(\"Please choose dates first!\");\n\t\t} else if (this.state.countryName == null || this.state.latLng == null) {\n\t\t\talert(\"Please select a country from the list!\");\n\t\t} else {\n\t\t\tevent.preventDefault();\n\t\t\tthis.props.newTrip(this.state.countryName, this.state.latLng[\"lat\"], this.state.latLng[\"lng\"], this.state.startDate, this.state.endDate);\n\t\t\tthis.setState({newTripCreated: true});\n\t\t}\n\t}\n\n\t//If new trip created is true, and loading is complete, then go to shopping page.\n\tstatic getDerivedStateFromProps(nextProps, prevState){\n\t  if (nextProps.loading===false && prevState.newTripCreated===true){\n\t     return { goToShoppingPage: true };\n\t  }\n\t  else return null;\n\t}\n\n\t//Happens upon receiving updated information.\n    componentDidUpdate(prevProps, prevState, snapshot) {\n    \tif (this.state.goToShoppingPage === true) {\n    \t\tthis.props.history.push(\"/shopping\");\n    \t}\n    }\n\n\trender() {\n\t\treturn (\n\t      <div className = \"container-fluid align-items-center inputForm\">\n\t      \t{\n\t    \t\t (this.props.isAuthenticated) ?\n\t    \t\t\t <h1>Hello, {this.props.username}!</h1> : (<h1>Hello stranger:)</h1>)\n\t    \t}\n\t          <div className = \"jumbotron\">\n\t              <form onSubmit = {this.newTrip}> \n\t                <div>\n\t                \t<h3> Enter Country: </h3>\n\t                \t<Autocomplete updateCountry={this.updateCountry} name = \"country\"/>\n\t                </div>\n\n\t                <div className =\"inputForm\">\n\t                \t<h3> Enter dates: </h3>\n\t                \t<Calendar updateDates={this.updateDates}/>\n\t                </div>\n\t                \n\t                <div className = \"inputForm\">\n\t                \t{ !this.props.loading ? \n\t                \t\t<button> Submit </button> \n\t                \t\t:\n\t\t\t\t\t\t\t<Spinner animation=\"border\" role=\"status\">\n\t\t\t\t\t\t\t  <span className=\"sr-only\">Loading...</span>\n\t\t\t\t\t\t\t</Spinner>\n\n\t                \t}\n\t                </div>\n\t              </form>\n\n\t              \n\t          </div>\n\t      </div>);\n\n\t}\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.token !== null,\n        username: state.username,\n        loading: state.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        newTrip: (tripCountry, tripLat, tripLng, startDate, endDate) => dispatch(actions.newTrip(tripCountry, tripLat, tripLng, startDate, endDate)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputForm);"]},"metadata":{},"sourceType":"module"}